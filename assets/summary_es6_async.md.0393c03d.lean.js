import{o as n,c as s,b as a,d as p,e as t,a as o}from"./app.47022123.js";const c='{"title":"async函数","description":"","frontmatter":{},"headers":[{"level":2,"title":"基本用法","slug":"基本用法"},{"level":2,"title":"错误处理","slug":"错误处理"},{"level":2,"title":"并发执行","slug":"并发执行"},{"level":2,"title":"异步处理比较","slug":"异步处理比较"},{"level":2,"title":"参考","slug":"参考"}],"relativePath":"summary/es6/async.md","lastUpdated":1626624545849}',e={},u=p("h1",{id:"async函数"},[p("a",{class:"header-anchor",href:"#async函数","aria-hidden":"true"},"#"),t(" async函数")],-1),l=p("p",null,[t("在es6中引入了"),p("code",null,"Promise"),t(" 和 "),p("code",null,"Generator"),t(" 函数的概念方便我们更加快速优化的实现异步编程，但是生成器的运行依赖于自动执行函数或者"),p("code",null,"co"),t("模块。所以在es7引入了 "),p("code",null,"async"),t(" 函数，使异步操作更加方便。")],-1),k=o('',30);e.render=function(p,t,o,c,e,i){return n(),s("div",null,[u,l,a("more"),k])};export default e;export{c as __pageData};
